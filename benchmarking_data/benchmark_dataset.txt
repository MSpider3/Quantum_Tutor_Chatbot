{"question": "What are the main features and benefits of the new IBM Quantum Platform upgrade?", "ground_truth_answer": "The main benefits include enhanced data privacy and security, streamlined notifications, better platform navigation, multiple language options, seamless integration with cloud compute services (COS, VPC), accelerated new access plans, a unified entry point for all IBM Quantum services, and an improved developer experience via API versioning.", "ground_truth_context": ["The new preview version of the Platform includes Heron QPU access for Open Plan users. The first examples of this will include enhanced data privacy and security features, a streamlined notifications experience, better platform navigation, multiple language options for users who speak languages other than English. This upgrade will enable the Platform to offer seamless integration with off-the-shelf cloud compute services like Cloud Object Storage (COS) and Virtual Private Cloud (VPC), accelerated introduction of new access plans, unified entry point for all services related to IBM Quantum, and improved developer experience through API versioning."]}
{"question": "Explain the primary purpose of Sample-based Quantum Diagonalization (SQD) and its advantage for chemistry simulations.", "ground_truth_answer": "SQD is a classical post-processing technique for finding eigenvalues and eigenvectors of quantum operators (like Hamiltonians), especially useful in chemistry. Its advantage lies in its robustness to quantum noise and its ability to manage large Hamiltonians beyond classical exact diagonalization.", "ground_truth_context": ["Sample-based quantum diagonalization (SQD) is a classical post-processing technique which acts on samples obtained from a quantum circuit after execution on a QPU. It is useful for finding eigenvalues and eigenvectors of quantum operators, such as the Hamiltonian of a quantum system, and uses quantum and distributed classical computing together. SQD is robust to samples corrupted by quantum noise and can manage large Hamiltonians, such as chemical systems with millions of interacting terms, beyond the reach of exact diagonalization methods."]}
{"question": "How does the Quantum Optimization Working Group's white paper address challenges in comparing quantum and classical optimization algorithms?", "ground_truth_answer": "The white paper addresses this by outlining essential building blocks for quantum optimization algorithms and proposing clear metrics and benchmarking problems to facilitate meaningful comparisons between quantum and classical techniques, also exploring strategies to improve existing quantum methods.", "ground_truth_context": ["The white paper outlines the essential building blocks for quantum optimization algorithms, and proposes clear metrics and benchmarking problems to facilitate meaningful comparisons between quantum and classical optimization techniques. It also explores potential strategies to improve existing quantum methods."]}
{"question": "What's the big deal about IBM running circuits with 5,000 two-qubit gates on Heron R2?", "ground_truth_answer": "Running circuits with 5,000 two-qubit gates on Heron R2 is significant because it's well beyond exact classical simulation capabilities, allowing users to perform real scientific discovery and push toward quantum advantage.", "ground_truth_context": ["Accurately running circuits with 5,000 two-qubit gates is the culmination of the 100x100 challenge, which is well into the regime of circuits beyond exact classical simulation. Developing quantum routines with 5,000+ gates gives users the opportunity to perform real scientific discovery with quantum computers, and to push forward in the search for quantum advantage."]}
{"question": "So, like, what's quantum entanglement actually do for quantum computers?", "ground_truth_answer": "Quantum entanglement links qubits so their states are correlated, regardless of distance. This property is crucial for quantum computers to perform complex operations beyond what classical computers can do.", "ground_truth_context": ["Entanglement is a unique quantum phenomenon where qubits become interlinked such that the state of one qubit instantly influences the state of the other, even over large distances. This property is key to quantum computing's power, enabling complex computational operations beyond classical capabilities."]}
{"question": "What are the three main performance metrics IBM uses to benchmark its quantum processors, and what does each measure?", "ground_truth_answer": "IBM uses three main performance metrics: Scale (qubit count), which is the number of available qubits; Quality (EPLG or 'errors per layered gate'), which measures the average error per gate; and Speed (CLOPS or 'circuit layer operations per second'), which quantifies how fast processors run quantum volume circuits.", "ground_truth_context": ["IBM uses three basic metrics to track performance improvement: Scale (Qubit count), which is the number of total qubits available; Quality (EPLG, or 'errors per layered gate'), which measures the average error each gate introduces in a circuit; and Speed (CLOPS, or 'circuit layer operations per second'), which quantifies how quickly processors can run quantum volume circuits in series."]}
{"question": "What's the difference between 'quantum utility' and 'quantum advantage'?", "ground_truth_answer": "Quantum utility means a quantum computation can provide reliable, accurate solutions to problems beyond brute-force classical simulators. Quantum advantage means a quantum solution is better, faster, or cheaper than all known classical methods for a given problem.", "ground_truth_context": ["Quantum utility refers to any quantum computation that provides reliable, accurate solutions to problems that are beyond the reach of brute-force classical computing quantum-machine simulators. Quantum advantage describes a situation where quantum can provide a better, faster, or cheaper solution than all known classical methods."]}
{"question": "Can you tell me about the CNOT gate and the Hadamard gate in quantum circuits?", "ground_truth_answer": "The CNOT (Controlled-NOT) gate flips the target qubit if the control qubit is |1⟩, crucial for entanglement. The Hadamard (H) gate puts a qubit into a superposition of both |0⟩ and |1⟩ states.", "ground_truth_context": ["The CNOT (Controlled-NOT) gate flips the target qubit when the control qubit is in state |1⟩, enabling entanglement between qubits. The Hadamard gate (H) creates superposition, placing a qubit from a definite state into a superposition of both states."]}
{"question": "What is the No-Cloning Theorem, and how does it affect copying quantum information?", "ground_truth_answer": "The No-Cloning Theorem states that an arbitrary unknown quantum state cannot be perfectly copied. This prevents direct duplication of quantum information for redundancy, necessitating complex error correction codes.", "ground_truth_context": ["The No-Cloning Theorem states that an arbitrary unknown quantum state cannot be perfectly copied. This impacts quantum information by preventing direct duplication of quantum information for redundancy, which necessitates more complex error correction codes."]}
{"question": "What are Qiskit Runtime primitives, and can you name the two important ones?", "ground_truth_answer": "Qiskit Runtime primitives are computational abstractions for extracting outputs from quantum computations. The two most important are Sampler (for probability distributions) and Estimator (for expectation values).", "ground_truth_context": ["Qiskit Runtime primitives are computational abstractions that extract outputs from quantum computations in the form of circuits. The two most important primitives are Sampler, which samples from a distribution of possible outcomes from a quantum circuit, and Estimator, which calculates an expectation value (or weighted average of the possible outcomes) from the circuit."]}
{"question": "Describe the typical workflow for running experiments at scale on an IBM Quantum computer using Qiskit patterns.", "ground_truth_answer": "The typical workflow uses Qiskit patterns and consists of four main steps: Map (translate problem to a quantum circuit), Optimize (transpile and layout the circuit for hardware), Execute (run on hardware using primitives with error suppression/mitigation), and Post-process (analyze results).", "ground_truth_context": ["The typical workflow involves four main steps: Map, which formalizes how a problem is translated into a quantum circuit; Optimize, which uses Qiskit's transpiler to route and lay out the circuit onto physical hardware; Execute, where Qiskit Runtime primitives run the transpiled circuits, including error suppression and mitigation; and Post-process, where data from the quantum processor is analyzed to provide useful results."]}
{"question": "How does the Maximum Execution Time work for Qiskit Runtime jobs, and what factors determine it?", "ground_truth_answer": "Maximum execution time for a Qiskit Runtime job is the lesser of a user-defined limit and a service-calculated timeout (capped at 3 hours), both measured in 'quantum time'. If exceeded, the job is canceled.", "ground_truth_context": ["The maximum execution time for a Qiskit Runtime job is the smaller of a user-specified `max_execution_time` value (in quantum time) and a service-calculated timeout (capped at 3 hours). If a job exceeds this limit, it is forcibly canceled."]}
{"question": "What's MPF all about in quantum simulation?", "ground_truth_answer": "MPF (Multi-product formulas) is a post-processing technique in quantum simulation that reduces Trotter approximation error by using a weighted combination of results from several circuit executions, each with a different number of Trotter steps.", "ground_truth_context": ["Multi-product formulas (MPF) aim to reduce the Trotter approximation error associated with simulating the dynamics of quantum systems. This is achieved through a weighted combination of several circuit executions, where each circuit uses a different number of Trotter steps."]}
{"question": "Tell me about circuit cutting – what kinds of cuts are there?", "ground_truth_answer": "Circuit cutting is a technique to run larger circuits by breaking them into smaller parts, incurring a sampling overhead. It involves 'gate cuts' (space-like, cutting through multi-qubit gates) and 'wire cuts' (time-like, cutting through a single qubit wire).", "ground_truth_context": ["Circuit cutting is a technique to increase the size of circuits that can run on quantum hardware, at the cost of an additional sampling overhead. It involves two types of cuts: a gate or 'space-like' cut, where a cut goes through a gate operating on two (or more) qubits, and a wire or 'time-like' cut, which cuts directly through a qubit wire."]}
{"question": "How does the Qiskit Code Assistant use AI to help quantum developers?", "ground_truth_answer": "The Qiskit Code Assistant uses generative AI, powered by IBM's watsonx and trained on Qiskit data, to offer LLM-generated code suggestions and simplify the quantum development workflow.", "ground_truth_context": ["Qiskit Code Assistant is a generative AI code assistant powered by watsonx. It is trained using millions of text tokens from Qiskit SDK v1.x, years of Qiskit code examples, and IBM Quantum features. It offers LLM-generated suggestions based on IBM Granite models, helping users write quantum computing code faster and simplifying the development workflow."]}
{"question": "What is a `barrier` in Qiskit, and what is its purpose?", "ground_truth_answer": "A `barrier` in Qiskit creates a visual separation in a circuit diagram for readability. More importantly, it prevents the transpiler from performing optimizations across that point, ensuring certain gate combinations are not merged or reordered during compilation.", "ground_truth_context": ["The `barrier` function creates a visual separation making the circuit diagram more readable, and it also prevents Qiskit from performing various simplifications and optimizations across the barrier during compilation when circuits are run on real hardware. It is also useful for visualizations."]}
{"question": "What are the different types of `qubits` discussed across the documents?", "ground_truth_answer": "The documents mention superconducting qubits (used in IBM quantum processors), trapped ion qubits, photonic qubits, and topological qubits (a more theoretical type theorized to be resistant to environmental noise).", "ground_truth_context": ["The documents mention superconducting qubits (used in IBM quantum processors), trapped ion qubits, photonic qubits, and topological qubits (a more theoretical approach)."]}
{"question": "How does the quantum teleportation protocol work, and why does it not violate the No-Cloning Theorem?", "ground_truth_answer": "The quantum teleportation protocol involves Alice and Bob sharing an entangled e-bit. Alice performs CNOT and Hadamard operations on her qubit and one half of the e-bit, measures them, and sends classical results to Bob. Bob then applies corrections (X/Z gates) to his half of the e-bit based on Alice's classical info, recreating the original quantum state there. It doesn't violate the No-Cloning Theorem because Alice's original qubit state is destroyed (collapsed by measurement) during the process, meaning no copy exists simultaneously.", "ground_truth_context": ["The quantum teleportation protocol involves Alice performing a controlled-NOT operation and a Hadamard operation on her qubits, then measuring them and sending the classical outcomes to Bob. Bob then applies X and/or Z operations to his entangled qubit based on Alice's classical bits, resulting in the original quantum state being transferred to Bob's qubit. This protocol does not violate the No-Cloning Theorem because the original qubit's state is destroyed (changed to a classical outcome) at Alice's end during the measurement, meaning no perfect copy is ever created."]}
{"question": "Explain how the CHSH game uses entanglement to achieve a better winning probability than classical strategies, referencing its optimal winning probability.", "ground_truth_answer": "In the CHSH game, Alice and Bob, by pre-sharing an entangled quantum state and performing specific local measurements, can achieve a winning probability of approximately 0.85. This surpasses the maximum classical winning probability of 0.75 (or 3/4), demonstrating the power of entanglement to achieve correlations impossible with classical strategies alone.", "ground_truth_context": ["The CHSH game is a nonlocal game where Alice and Bob, by sharing an entangled quantum state, can achieve a winning probability greater than 3/4. Classical strategies (deterministic or probabilistic) are limited to a maximum winning probability of 3/4. The quantum strategy's optimal winning probability is approximately 0.85, which is achieved because the entanglement allows for correlations between Alice's and Bob's measurements that are impossible classically."]}
{"question": "What is a Toffoli gate, and how can it be implemented using elementary operations?", "ground_truth_answer": "A Toffoli gate, also known as a controlled-controlled-NOT (CCX) gate, is a three-qubit gate where a NOT operation is applied to the target qubit only if both control qubits are in the |1⟩ state. It can be implemented using a sequence of elementary operations like Hadamard gates, T and T† gates, and CNOT gates.", "ground_truth_context": ["A Toffoli gate, also known as a controlled-controlled-NOT (CCX) operation, has two control qubits and one target qubit, applying a NOT to the target only when both controls are in state |1⟩. The Toffoli gate can be implemented by elementary operations such as Hadamard gates, T and T† gates, and CNOT gates in a specific circuit sequence."]}
